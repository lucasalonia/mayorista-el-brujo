@{
    ViewData["Title"] = "Usuarios";
}

<div id="app" class="container mt-5 text-white d-flex flex-column" data-bs-theme="dark">

    <!-- Cabecera -->
    <div class="table-header">
        <h2>Listado de Usuarios</h2>
        <button class="btn btn-primary shadow-sm d-flex align-items-center" v-on:click="agregarUsuario">
            <i class="bi bi-plus fs-5 me-1"></i> Nuevo
        </button>
    </div>

    <!-- Input de bÃºsqueda -->
    <div class="mb-4 w-100">
        <input type="text" class="form-control table-search-input w-50" placeholder="Buscar usuario..."
            v-model="busqueda" style="font-size: 1.1rem;">
    </div>

    <!-- Tabla responsive -->
    <div class="table-responsive-custom">
        <table class="table table-dark-custom table-hover table-striped table-bordered align-middle text-center">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>Email</th>
                    <th>Rol</th>
                    <th>Estado</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                <!-- Filas de usuarios -->
                <tr v-for="usuario in usuariosFiltrados" :key="usuario.id" class="align-middle">
                    <td>{{ usuario.id }}</td>
                    <td>{{ usuario.persona ? usuario.persona.nombre : '' }}</td>
                    <td>{{ usuario.persona ? usuario.persona.apellido : '' }}</td>
                    <td>{{ usuario.persona ? usuario.persona.email : '' }}</td>
                    <td>{{ usuario.rol }}</td>
                    <td>
                        <span class="badge rounded-pill"
                              :class="usuario.estado === 'ACTIVO' ? 'badge-success' : 'badge-secondary'">
                            {{ usuario.estado }}
                        </span>
                    </td>
                    <td>
                        <button class="btn btn-warning btn-sm me-1" v-on:click="editarUsuario(usuario)">Editar</button>
                        <button class="btn btn-danger btn-sm" v-on:click="eliminarUsuario(usuario)">Eliminar</button>
                    </td>
                </tr>

                <!-- Spinner -->
                <tr v-if="loading">
                    <td colspan="7" class="text-center py-5">
                        <div class="table-spinner">
                            <div class="spinner-border text-light" role="status" style="width: 3rem; height: 3rem;">
                                <span class="visually-hidden">Cargando...</span>
                            </div>
                            <div class="mt-2">Cargando usuarios...</div>
                        </div>
                    </td>
                </tr>

                <!-- Error -->
                <tr v-if="error">
                    <td colspan="7" class="text-danger py-3">Error al cargar usuarios</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    

    <script>
        new Vue({
            el: '#app',
            data: {
                usuarios: [],
                loading: true,
                error: false,
                busqueda: ''
            },
            mounted() {
                fetch('/Usuario/ObtenerTodos')
                    .then(res => {
                        if (!res.ok) throw new Error('Error al obtener usuarios');
                        return res.json();
                    })
                    .then(data => {
                        this.usuarios = data;
                        this.loading = false;
                    })
                    .catch(err => {
                        console.error(err);
                        this.error = true;
                        this.loading = false;
                    });
            },
            computed: {
                usuariosFiltrados() {
                    if (!this.busqueda) return this.usuarios;
                    const term = this.busqueda.toLowerCase();
                    return this.usuarios.filter(u =>
                        (u.id.toString().includes(term)) ||
                        (u.persona?.nombre?.toLowerCase().includes(term)) ||
                        (u.persona?.apellido?.toLowerCase().includes(term)) ||
                        (u.persona?.email?.toLowerCase().includes(term)) ||
                        (u.rol?.toLowerCase().includes(term)) ||
                        (u.estado?.toLowerCase().includes(term))
                    );
                }
            },
            methods: {
                agregarUsuario() {
                    window.location.href = '/Usuario/Create';
                },
                editarUsuario(usuario) {
                    alert('Editar usuario: ' + (usuario.persona?.nombre || ''));
                },
                eliminarUsuario(usuario) {
                    alert('Eliminar usuario: ' + (usuario.persona?.nombre || ''));
                }
            }
        });
    </script>
}
